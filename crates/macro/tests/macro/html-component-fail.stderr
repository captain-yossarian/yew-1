error: this open tag has no corresponding close tag
  --> $DIR/html-component-fail.rs:70:13
   |
70 |     html! { <Child> };
   |             ^^^^^^^

error: expected identifier
  --> $DIR/html-component-fail.rs:71:22
   |
71 |     html! { <Child:: /> };
   |                      ^

error: unexpected end of input, expected identifier
  --> $DIR/html-component-fail.rs:72:5
   |
72 |     html! { <Child with /> };
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error: unexpected token
  --> $DIR/html-component-fail.rs:73:20
   |
73 |     html! { <Child props /> };
   |                    ^^^^^

error: this open tag has no corresponding close tag
  --> $DIR/html-component-fail.rs:74:13
   |
74 |     html! { <Child with props > };
   |             ^^^^^^^^^^^^^^^^^^^

error: unexpected token
  --> $DIR/html-component-fail.rs:75:38
   |
75 |     html! { <Child with props ref=() ref=() /> };
   |                                      ^^^

<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
error: unexpected token
  --> $DIR/html-component-fail.rs:76:27
=======
error: Using special syntax `with props` along with named prop is not allowed
  --> $DIR/html-component-fail.rs:59:27
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
   |
76 |     html! { <Child ref=() with props /> };
   |                           ^^^^

error: unexpected token
  --> $DIR/html-component-fail.rs:78:31
   |
78 |     html! { <Child with props () /> };
=======
error: too many refs set
  --> $DIR/html-component-fail.rs:59:38
   |
59 |     html! { <Child with props ref=() ref=() value=1 /> };
   |                                      ^^^

error: Using special syntax `with props` along with named prop is not allowed. This rule does not apply to special `ref` prop
  --> $DIR/html-component-fail.rs:60:38
   |
60 |     html! { <Child with props ref=() value=1 ref=() /> };
   |                                      ^^^^^

error: Using special syntax `with props` along with named prop is not allowed. This rule does not apply to special `ref` prop
  --> $DIR/html-component-fail.rs:61:31
   |
61 |     html! { <Child with props value=1 ref=()  ref=() /> };
   |                               ^^^^^

error: Using special syntax `with props` along with named prop is not allowed. This rule does not apply to special `ref` prop
  --> $DIR/html-component-fail.rs:62:28
   |
62 |     html! { <Child value=1 with props  ref=()  ref=() /> };
   |                            ^^^^

error: Using special syntax `with props` along with named prop is not allowed. This rule does not apply to special `ref` prop
  --> $DIR/html-component-fail.rs:63:35
   |
63 |     html! { <Child value=1 ref=() with props ref=() /> };
   |                                   ^^^^

error: too many refs set
  --> $DIR/html-component-fail.rs:64:27
   |
64 |     html! { <Child ref=() ref=() value=1  with props  /> };
   |                           ^^^

error: unexpected token
  --> $DIR/html-component-fail.rs:66:31
   |
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
67 |     html! { <Child with props () /> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
66 |     html! { <Child with props () /> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |                               ^^

error: Using special syntax `with props` along with named prop is not allowed. This rule does not apply to special `ref` prop
  --> $DIR/html-component-fail.rs:67:28
   |
67 |     html! { <Child value=1 with props /> };
   |                            ^^^^

error: Using special syntax `with props` along with named prop is not allowed. This rule does not apply to special `ref` prop
  --> $DIR/html-component-fail.rs:68:31
   |
68 |     html! { <Child with props value=1 /> };
   |                               ^^^^^

error: expected identifier
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:79:20
   |
79 |     html! { <Child type=0 /> };
   |                    ^^^^

error: expected identifier
  --> $DIR/html-component-fail.rs:80:20
   |
80 |     html! { <Child invalid-prop-name=0 /> };
   |                    ^^^^^^^^^^^^^^^^^

error: unexpected end of input, expected expression
  --> $DIR/html-component-fail.rs:82:5
   |
82 |     html! { <Child string= /> };
=======
  --> $DIR/html-component-fail.rs:64:20
=======
  --> $DIR/html-component-fail.rs:70:20
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:69:20
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |
69 |     html! { <Child type=0 /> };
   |                    ^^^^

error: expected identifier
  --> $DIR/html-component-fail.rs:70:20
   |
70 |     html! { <Child invalid-prop-name=0 /> };
   |                    ^^^^^^^^^^^^^^^^^

error: unexpected end of input, expected expression
  --> $DIR/html-component-fail.rs:72:5
   |
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
67 |     html! { <Child string= /> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
73 |     html! { <Child string= /> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
72 |     html! { <Child string= /> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error: too many refs set
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:87:33
   |
87 |     html! { <Child int=1 ref=() ref=() /> };
   |                                 ^^^

error: this close tag has no corresponding open tag
  --> $DIR/html-component-fail.rs:90:13
   |
90 |     html! { </Child> };
   |             ^^^^^^^^

error: this open tag has no corresponding close tag
  --> $DIR/html-component-fail.rs:91:13
   |
91 |     html! { <Child><Child></Child> };
   |             ^^^^^^^

error: only one root html element allowed
  --> $DIR/html-component-fail.rs:92:28
   |
92 |     html! { <Child></Child><Child></Child> };
   |                            ^^^^^^^^^^^^^^^

error: this close tag has no corresponding open tag
   --> $DIR/html-component-fail.rs:101:30
    |
101 |     html! { <Generic<String>></Generic> };
    |                              ^^^^^^^^^^

error: this close tag has no corresponding open tag
   --> $DIR/html-component-fail.rs:102:30
    |
102 |     html! { <Generic<String>></Generic<Vec<String>>> };
    |                              ^^^^^^^^^^^^^^^^^^^^^^^
=======
  --> $DIR/html-component-fail.rs:72:33
=======
  --> $DIR/html-component-fail.rs:78:33
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:77:33
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |
77 |     html! { <Child int=1 ref=() ref=() /> };
   |                                 ^^^

error: this close tag has no corresponding open tag
  --> $DIR/html-component-fail.rs:80:13
   |
80 |     html! { </Child> };
   |             ^^^^^^^^

error: this open tag has no corresponding close tag
  --> $DIR/html-component-fail.rs:81:13
   |
81 |     html! { <Child><Child></Child> };
   |             ^^^^^^^

error: only one root html element allowed
  --> $DIR/html-component-fail.rs:82:28
   |
82 |     html! { <Child></Child><Child></Child> };
   |                            ^^^^^^^^^^^^^^^

error: this close tag has no corresponding open tag
  --> $DIR/html-component-fail.rs:91:30
   |
91 |     html! { <Generic<String>></Generic> };
   |                              ^^^^^^^^^^

error: this close tag has no corresponding open tag
  --> $DIR/html-component-fail.rs:92:30
   |
92 |     html! { <Generic<String>></Generic<Vec<String>>> };
   |                              ^^^^^^^^^^^^^^^^^^^^^^^
>>>>>>> add stderr:tests/macro/html-component-fail.stderr

error[E0425]: cannot find value `blah` in this scope
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:77:25
   |
77 |     html! { <Child with blah /> };
   |                         ^^^^ not found in this scope

error[E0609]: no field `unknown` on type `ChildProperties`
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:81:20
   |
81 |     html! { <Child unknown="unknown" /> };
=======
  --> $DIR/html-component-fail.rs:66:20
   |
66 |     html! { <Child unknown="unknown" /> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:66:25
=======
  --> $DIR/html-component-fail.rs:65:25
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |
65 |     html! { <Child with blah /> };
   |                         ^^^^ not found in this scope

error[E0609]: no field `unknown` on type `ChildProperties`
  --> $DIR/html-component-fail.rs:71:20
   |
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
72 |     html! { <Child unknown="unknown" /> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
71 |     html! { <Child unknown="unknown" /> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |                    ^^^^^^^ unknown field
   |
   = note: available fields are: `string`, `int`

error[E0599]: no method named `unknown` found for type `ChildPropertiesBuilder<ChildPropertiesBuilderStep_missing_required_prop_int>` in the current scope
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:81:20
=======
  --> $DIR/html-component-fail.rs:66:20
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:72:20
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:71:20
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |
6  | #[derive(Clone, Properties, PartialEq)]
   |                 ---------- method `unknown` not found for this
...
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
81 |     html! { <Child unknown="unknown" /> };
   |                    ^^^^^^^ method not found in `ChildPropertiesBuilder<ChildPropertiesBuilderStep_missing_required_prop_int>`

error[E0277]: the trait bound `yew::virtual_dom::vcomp::VComp: yew::virtual_dom::Transformer<(), std::string::String>` is not satisfied
  --> $DIR/html-component-fail.rs:83:33
   |
83 |     html! { <Child int=1 string={} /> };
=======
66 |     html! { <Child unknown="unknown" /> };
=======
72 |     html! { <Child unknown="unknown" /> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
71 |     html! { <Child unknown="unknown" /> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |                    ^^^^^^^ method not found in `ChildPropertiesBuilder<ChildPropertiesBuilderStep_missing_required_prop_int>`

error[E0277]: the trait bound `yew::virtual_dom::vcomp::VComp: yew::virtual_dom::Transformer<(), std::string::String>` is not satisfied
  --> $DIR/html-component-fail.rs:73:33
   |
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
68 |     html! { <Child int=1 string={} /> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
74 |     html! { <Child int=1 string={} /> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
73 |     html! { <Child int=1 string={} /> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |                                 ^^ the trait `yew::virtual_dom::Transformer<(), std::string::String>` is not implemented for `yew::virtual_dom::vcomp::VComp`
   |
   = help: the following implementations were found:
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a T, T>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a T, std::option::Option<T>>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a str, std::option::Option<std::string::String>>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a str, std::string::String>>
           and 3 others
   = note: required by `yew::virtual_dom::Transformer::transform`

error[E0277]: the trait bound `yew::virtual_dom::vcomp::VComp: yew::virtual_dom::Transformer<{integer}, std::string::String>` is not satisfied
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:84:33
   |
84 |     html! { <Child int=1 string=3 /> };
=======
  --> $DIR/html-component-fail.rs:69:33
   |
69 |     html! { <Child int=1 string=3 /> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:75:33
   |
75 |     html! { <Child int=1 string=3 /> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:74:33
   |
74 |     html! { <Child int=1 string=3 /> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |                                 ^ the trait `yew::virtual_dom::Transformer<{integer}, std::string::String>` is not implemented for `yew::virtual_dom::vcomp::VComp`
   |
   = help: the following implementations were found:
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a T, T>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a T, std::option::Option<T>>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a str, std::option::Option<std::string::String>>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a str, std::string::String>>
           and 3 others
   = note: required by `yew::virtual_dom::Transformer::transform`

error[E0277]: the trait bound `yew::virtual_dom::vcomp::VComp: yew::virtual_dom::Transformer<{integer}, std::string::String>` is not satisfied
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:85:33
   |
85 |     html! { <Child int=1 string={3} /> };
=======
  --> $DIR/html-component-fail.rs:70:33
   |
70 |     html! { <Child int=1 string={3} /> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:76:33
   |
76 |     html! { <Child int=1 string={3} /> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:75:33
   |
75 |     html! { <Child int=1 string={3} /> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |                                 ^^^ the trait `yew::virtual_dom::Transformer<{integer}, std::string::String>` is not implemented for `yew::virtual_dom::vcomp::VComp`
   |
   = help: the following implementations were found:
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a T, T>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a T, std::option::Option<T>>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a str, std::option::Option<std::string::String>>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a str, std::string::String>>
           and 3 others
   = note: required by `yew::virtual_dom::Transformer::transform`

error[E0308]: mismatched types
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:86:30
   |
86 |     html! { <Child int=1 ref=() /> };
   |                              ^^ expected struct `yew::html::NodeRef`, found `()`

error[E0277]: the trait bound `yew::virtual_dom::vcomp::VComp: yew::virtual_dom::Transformer<u32, i32>` is not satisfied
  --> $DIR/html-component-fail.rs:88:24
   |
88 |     html! { <Child int=0u32 /> };
=======
  --> $DIR/html-component-fail.rs:71:30
=======
  --> $DIR/html-component-fail.rs:77:30
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:76:30
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |
76 |     html! { <Child int=1 ref=() /> };
   |                              ^^ expected struct `yew::html::NodeRef`, found `()`

error[E0277]: the trait bound `yew::virtual_dom::vcomp::VComp: yew::virtual_dom::Transformer<u32, i32>` is not satisfied
  --> $DIR/html-component-fail.rs:78:24
   |
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
73 |     html! { <Child int=0u32 /> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
79 |     html! { <Child int=0u32 /> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
78 |     html! { <Child int=0u32 /> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |                        ^^^^ the trait `yew::virtual_dom::Transformer<u32, i32>` is not implemented for `yew::virtual_dom::vcomp::VComp`
   |
   = help: the following implementations were found:
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a T, T>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a T, std::option::Option<T>>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a str, std::option::Option<std::string::String>>>
             <yew::virtual_dom::vcomp::VComp as yew::virtual_dom::Transformer<&'a str, std::string::String>>
           and 3 others
   = note: required by `yew::virtual_dom::Transformer::transform`

error[E0599]: no method named `string` found for type `ChildPropertiesBuilder<ChildPropertiesBuilderStep_missing_required_prop_int>` in the current scope
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:89:20
=======
  --> $DIR/html-component-fail.rs:74:20
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:80:20
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:79:20
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |
6  | #[derive(Clone, Properties, PartialEq)]
   |                 ---------- method `string` not found for this
...
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
89 |     html! { <Child string="abc" /> };
=======
74 |     html! { <Child string="abc" /> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
80 |     html! { <Child string="abc" /> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
79 |     html! { <Child string="abc" /> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |                    ^^^^^^ method not found in `ChildPropertiesBuilder<ChildPropertiesBuilderStep_missing_required_prop_int>`
   |
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following trait defines an item `string`, perhaps you need to implement it:
           candidate #1: `proc_macro::bridge::server::Literal`

error[E0599]: no method named `children` found for type `ChildPropertiesBuilder<ChildPropertiesBuilderStep_missing_required_prop_int>` in the current scope
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:93:5
=======
  --> $DIR/html-component-fail.rs:78:5
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:84:5
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:83:5
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |
6  | #[derive(Clone, Properties, PartialEq)]
   |                 ---------- method `children` not found for this
...
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
93 |     html! { <Child>{ "Not allowed" }</Child> };
=======
78 |     html! { <Child>{ "Not allowed" }</Child> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
84 |     html! { <Child>{ "Not allowed" }</Child> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
83 |     html! { <Child>{ "Not allowed" }</Child> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `ChildPropertiesBuilder<ChildPropertiesBuilderStep_missing_required_prop_int>`
   |
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0599]: no method named `build` found for type `ChildContainerPropertiesBuilder<ChildContainerPropertiesBuilderStep_missing_required_prop_children>` in the current scope
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:95:5
=======
  --> $DIR/html-component-fail.rs:80:5
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:86:5
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:85:5
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |
29 | #[derive(Clone, Properties)]
   |                 ---------- method `build` not found for this
...
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
95 |     html! { <ChildContainer /> };
=======
80 |     html! { <ChildContainer /> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
86 |     html! { <ChildContainer /> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
85 |     html! { <ChildContainer /> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `ChildContainerPropertiesBuilder<ChildContainerPropertiesBuilderStep_missing_required_prop_children>`
   |
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following trait defines an item `build`, perhaps you need to implement it:
           candidate #1: `proc_macro::bridge::server::TokenStreamBuilder`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0599]: no method named `build` found for type `ChildContainerPropertiesBuilder<ChildContainerPropertiesBuilderStep_missing_required_prop_children>` in the current scope
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:96:5
=======
  --> $DIR/html-component-fail.rs:81:5
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:87:5
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:86:5
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |
29 | #[derive(Clone, Properties)]
   |                 ---------- method `build` not found for this
...
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
96 |     html! { <ChildContainer></ChildContainer> };
=======
81 |     html! { <ChildContainer></ChildContainer> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
87 |     html! { <ChildContainer></ChildContainer> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
86 |     html! { <ChildContainer></ChildContainer> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `ChildContainerPropertiesBuilder<ChildContainerPropertiesBuilderStep_missing_required_prop_children>`
   |
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following trait defines an item `build`, perhaps you need to implement it:
           candidate #1: `proc_macro::bridge::server::TokenStreamBuilder`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0277]: the trait bound `yew::virtual_dom::vcomp::VChild<Child>: std::convert::From<&str>` is not satisfied
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:97:5
   |
97 |     html! { <ChildContainer>{ "Not allowed" }</ChildContainer> };
=======
  --> $DIR/html-component-fail.rs:82:5
   |
82 |     html! { <ChildContainer>{ "Not allowed" }</ChildContainer> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:88:5
   |
88 |     html! { <ChildContainer>{ "Not allowed" }</ChildContainer> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:87:5
   |
87 |     html! { <ChildContainer>{ "Not allowed" }</ChildContainer> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<&str>` is not implemented for `yew::virtual_dom::vcomp::VChild<Child>`
   |
   = note: required because of the requirements on the impl of `std::convert::Into<yew::virtual_dom::vcomp::VChild<Child>>` for `&str`
   = note: required because of the requirements on the impl of `std::iter::IntoIterator` for `yew::utils::NodeSeq<&str, yew::virtual_dom::vcomp::VChild<Child>>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0277]: the trait bound `yew::virtual_dom::vcomp::VChild<Child>: std::convert::From<yew::virtual_dom::vnode::VNode>` is not satisfied
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:98:5
   |
98 |     html! { <ChildContainer><></></ChildContainer> };
=======
  --> $DIR/html-component-fail.rs:83:5
   |
83 |     html! { <ChildContainer><></></ChildContainer> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:89:5
   |
89 |     html! { <ChildContainer><></></ChildContainer> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:88:5
   |
88 |     html! { <ChildContainer><></></ChildContainer> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<yew::virtual_dom::vnode::VNode>` is not implemented for `yew::virtual_dom::vcomp::VChild<Child>`
   |
   = note: required because of the requirements on the impl of `std::convert::Into<yew::virtual_dom::vcomp::VChild<Child>>` for `yew::virtual_dom::vnode::VNode`
   = note: required because of the requirements on the impl of `std::iter::IntoIterator` for `yew::utils::NodeSeq<yew::virtual_dom::vnode::VNode, yew::virtual_dom::vcomp::VChild<Child>>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0277]: the trait bound `yew::virtual_dom::vcomp::VChild<Child>: std::convert::From<yew::virtual_dom::vnode::VNode>` is not satisfied
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
<<<<<<< HEAD:crates/macro/tests/macro/html-component-fail.stderr
  --> $DIR/html-component-fail.rs:99:5
   |
99 |     html! { <ChildContainer><other /></ChildContainer> };
=======
  --> $DIR/html-component-fail.rs:84:5
   |
84 |     html! { <ChildContainer><other /></ChildContainer> };
>>>>>>> add stderr:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:90:5
   |
90 |     html! { <ChildContainer><other /></ChildContainer> };
>>>>>>> remove logs:tests/macro/html-component-fail.stderr
=======
  --> $DIR/html-component-fail.rs:89:5
   |
89 |     html! { <ChildContainer><other /></ChildContainer> };
>>>>>>> Fix with props checks:tests/macro/html-component-fail.stderr
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<yew::virtual_dom::vnode::VNode>` is not implemented for `yew::virtual_dom::vcomp::VChild<Child>`
   |
   = note: required because of the requirements on the impl of `std::convert::Into<yew::virtual_dom::vcomp::VChild<Child>>` for `yew::virtual_dom::vnode::VNode`
   = note: required because of the requirements on the impl of `std::iter::IntoIterator` for `yew::utils::NodeSeq<yew::virtual_dom::vnode::VNode, yew::virtual_dom::vcomp::VChild<Child>>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
